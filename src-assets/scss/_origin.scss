
$combined-css: false !default;
$critical-css: false !default;

@mixin critical {
    @if $critical-css == true {
        @content;
    }
    @else if $combined-css == true {
        @content;
    }
}

@mixin non-critical {
    @if $critical-css == false {
        @content;
    }
    @else if $combined-css == true {
        @content;
    }
}

@function em($px, $base: 16) {
    @return ($px / $base) + em;
}

// Units for consistent spacing, vertical rhythm, and a typographic baseline

$unit            : 7;
$unit--gutter    : $unit * 4;
$unit--baseline  : $unit * 4;

$unit--field     : $unit * 6;

$unit--p         : 17;
$unit--p--large  : 24;
$unit--p--small  : 14;

$unit--h0: 55;
$unit--h1: 45;
$unit--h2: 30;
$unit--h3: 25;
$unit--h4: 20;
$unit--h5: $unit--p;
$unit--h6: $unit--p;

$nav--pinned      : 240;
$footer--width    : 420;
$block--max-width : 1140;
$scrollbar--width : 14;

// Breakpoints used throughout the website

$breakpoint--mini    : 420;
$breakpoint--mobile  : 580;
$breakpoint--desktop : 960;
$breakpoint--aside   : 1000;
// $breakpoint--pinned  : $nav--pinned + $block--max-width + $footer--width + $scrollbar--width;

$breakpoint--hero--1 : $breakpoint--mini;
$breakpoint--hero--2 : $breakpoint--mobile;
$breakpoint--hero--3 : 800;


$z-index--main     : 1000;
$z-index--header   : 2000;
$z-index--footer   : 3000;
$z-index--overlay  : 4000;
$z-index--nav      : 5000;

// Colours with more abstract semantic names

$colour__white     : #fff;
$colour__silver    : #f7f7f5;
$colour__slate     : #494b4c;
$colour__cream     : #f2f0e6;
$colour__canvas    : #d9d7ce;
$colour__highlight : #fffbcc;
$colour__error     : #bf5a56; // #e54545;
$colour__green     : #66ccaa; // #99cc66;
$colour__brand     : $colour__green;

$colour__text               : #494b4d;
$colour__text--light        : #919599;
$colour__text--dark         : #303233;
$colour__text--brand        : $colour__brand;

$colour__text--link         : #1d97bf; //#3d9ccc;
$colour__text--link--hover  : #1983a6; //darken($colour__text--link, 20);
$colour__text--error        : $colour__error;

$colour__hairline           : lighten(#b3b0aa, 15);
$colour__hairline--light    : lighten($colour__hairline, 15);
$colour__hairline--dark     : darken($colour__hairline, 15);

$colour__bg                 : $colour__cream;
$colour__bg--light          : $colour__white;
$colour__bg--dark           : $colour__slate;


// Font usage for normal, display, script, and monospace stacks

$fonts--sans       : "futura-pt", ".SFNSDisplay-Regular", "Helvetica Neue", Arial, sans-serif;
$fonts--serif      : $fonts--sans; // "ff-tisa-web-pro", Georgia, serif;
$fonts--monospace  : Monaco, Courier, monospace;

// now using universal IE stylesheet concept
// https://github.com/jakearchibald/sass-ie/
// $fix-media-queries: false !default;

@mixin respond-min($width)
{
    @media screen and (min-width: em($width)) {
        @content;
    }
}

@mixin respond-min-max($w1, $w2)
{
    @media screen and (min-width: em($w1)) and (max-width: em($w2)) {
        @content;
    }
}

@mixin respond-max($width)
{
    @media screen and (max-width: em($width)) {
        @content;
    }
}


@function inner-percent($percent)
{
    @return percentage( ( (100 / (100 - ($percent * 2))) * $percent ) / 100);
}

// $ratio is required for nested grids
// e.g. if parent container is 5 columns of 6 then ratio = 5/6

@function gc-gutter($gutter_count: 1, $ratio: 1, $width: $breakpoint--desktop)
{
    $gutter: $unit--gutter * $gutter_count;
    $width: $width * $ratio;
    @return percentage($gutter / $width);
}

@function gc-offset($col_count: 1, $col_total: 6, $ratio: 1, $width: $breakpoint--desktop, $inside: 0)
{
    $gutter: $unit--gutter;
    $width: $width * $ratio;

    // calculate width of columns
    $offset: $col_count * (($width - (($col_total - 1) * $gutter)) / $col_total);
    // add width of gutters
    $offset: $offset + (($col_count - $inside) * $gutter);
    // return as a percentage
    @return percentage($offset / $width);
}


@function gc-spanning($col_count: 1, $col_total: 6, $ratio: 1, $width: $breakpoint--desktop)
{
    @return gc-offset($col_count, $col_total, $ratio, $width, 1);
}

// old and busted
// @mixin font-size($s1, $s2) {
//     font-size: em($s1);
//     line-height: em($s2, $s1);
// }

// new hotness from @inuitcss
@mixin font-size($font-size, $line-height: true) {
    font-size: em($font-size);
    @if $line-height == true {
        line-height: ceil($font-size / $unit--baseline) * ($unit--baseline / $font-size) + em;
    }
    @else {
        line-height: em($line-height, $font-size);
    }
}

@mixin no-appearance {
    -webkit-appearance: none;
    -moz-appearance: none;
}

@mixin no-tap-highlight {
    -webkit-tap-highlight-color: rgba(0,0,0,0);
    outline: none;
}

@mixin text-truncate {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

@mixin clearfix {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
    *zoom: 1;
}

// Hide from both screenreaders and browsers: h5bp.com/u
@mixin hidden {
    display: none !important;
    visibility: hidden;
}

// Hide only visually, but have it available for screenreaders: h5bp.com/v
@mixin visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

@mixin image-replacement {
    display: block;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: clip;
    text-indent: 200%;
}
