
@include critical {

  html {
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    color: $black;
    font-family: $fonts--serif;
    font-weight: 300;
  }

  hr, .hr {
    display: block;
    clear: both;
    height: 0;
    margin: em($baseline - 2) 0 em($baseline - 1) 0;
    border: 0;
    outline: none;
    border-top: 2px solid $canvas;
    // border-bottom: 1px solid $yellow;
  }

  a {
    color: $blue;
    text-decoration: none;
    cursor: pointer;
    background-image: linear-gradient(to right, rgba($green, 1) 0%, rgba($green, 1) 100%);
    background-repeat: repeat-x;
    background-size: 100% 2px;
    background-position: 0 90%;
    text-shadow: 2px 0 0 $beige, -2px 0 0 $beige;

    &:not([class]):focus,
    &:not([class]):hover {
      outline: 0;
      text-shadow: none;
      background-image: linear-gradient(to right, rgba($yellow, 1) 0%, rgba($yellow, 1) 100%);
      background-size: 100% 7px;
      background-position: 0 90%;
    }

    .footer & {
      text-shadow: 2px 0 0 $white, -2px 0 0 $white;
    }
  }

  h1, h2, h3, h4, h5, h6,
  .h1, .h2, .h3, .h4, .h5, .h6 {
    margin: 0;
    font-weight: 500;
    color: $blue;
    text-shadow: //-1px 0 0 rgba($beige, 1),
                 //,
                 2px 2px 0 rgba($green, 0.5);
                 // -2px 2px 0 rgba($beige, 1),
                 // 4px 2px 0 rgba($beige, 1);

    // .footer & {
    //   text-shadow: -1px 0 0 rgba($white, 1),
    //                1px 1px 0 rgba($white, 1),
    //                2px 3px 0 rgba($green, 0.8);
    // }

    &:last-child {
      margin-bottom: 0;
    }

    a {
      text-shadow: inherit;
      background-position: 0 95%;

      &:focus, &:hover {
        text-shadow: inherit;
      }

      .footer & {
        text-shadow: inherit;
      }
    }
  }

  h4, h5, h6,
  .h4, .h5, .h6 {
    // text-shadow: none;
  }

  @include respond-min($breakpoint--mini)
  {


    .h0 {
      @include font-size(60);
      margin-bottom: em($unit * 2, $h0);
    }
  }

  h1, .h1 {
    @include font-size($h1);
    margin-bottom: em($unit * 2, $h1);

    p + & {
      margin-top: em($unit * 5, $h1);
    }
  }

  h2, .h2 {
    @include font-size($h2);
    margin-bottom: em($unit * 2, $h2);

    p + & {
      margin-top: em($unit * 5, $h2);
    }
  }

  h3, .h3 {
    @include font-size($h3);
    margin-bottom: em($unit * 2, $h3);

    p + & {
      margin-top: em($unit * 5, $h3);
    }
  }

  h4, .h4 {
    @include font-size($h4);
    margin-bottom: em($unit * 2, $h4);

    p + & {
      margin-top: em($unit * 5, $h4);
    }
  }

  p, .p {
    @include font-size($p, $unit * 4);
    margin-top: 0;
    margin-bottom: em($unit * 2, $p);

    &:last-child {
      margin-bottom: 0;
    }
  }

  small,
  .p--small {
    @include font-size($p--small, $unit * 4);

    a {
      background-size: 100% 1px;
    }
  }

  .p--small {
    margin-bottom: em($unit * 2, $p--small);

    small {
      display: inline-block;
      font-size: inherit;
      line-height: 1;
    }
  }

  .p--large {
    @include font-size($p--large, $unit * 4);
    margin-bottom: em($unit * 4, $p--large);
  }

  ul, ol {
    padding: 0;
    margin: 0 0 em($baseline) em($gutter);
    list-style: disc outside;

    p + & {
      margin-top: em($baseline);
    }

    &:last-child {
      margin-bottom: 0;
    }
  }

  ul {
    list-style-image: url("../img/bullet.svg");
  }

  li {
    @include font-size($p, $unit * 4);
    margin-bottom: em($unit, $p);

    li, &:not([class]) p {
      font-size: inherit;
      line-height: inherit;
    }

    &:last-child {
      margin-bottom: 0;
    }
  }

  ol {
    list-style: decimal outside;
  }

  time {
    display: block;
    text-transform: uppercase;
    color: $grey;

    abbr[title] {
      border: none;
      background-image: none;
    }

    p &,
    li & {
      font-size: em($p--small, $p);
    }
  }

  ::selection {
    color: $pink;
    background: $yellow;
    text-shadow: none;
  }

  .p--error {
    color: $red;
  }

  .p--light {
    color: $grey;
  }

  cite,
  .p--light {
    a {
      color: inherit;
    }
  }

  .p--quote {

    &:before {
      display: inline-block;
      line-height: 1;
      content: "\201C";
      width: 0.6em;
      margin-left: -0.6em;
      opacity: 0.7;
    }

    &:after {
      content: "\201D";
      opacity: 0.7;
      margin-left: 0.3em;
    }
  }

  cite {
    border: none;
    font-style: normal;

    a {
      color: inherit;
    }
  }

  .quote,
  blockquote {
    margin: em($baseline) 0;
    padding: 0 em($gutter);
    border-left: em(2) solid $green;

    p {
      color: $grey;
    }

    .p--large {
      & + .p--small:last-child {
        margin-top: em(-$unit * 2, $p--small);
      }
    }

    @include respond-max($breakpoint--mini - 1)
    {
      padding: 0;
      border-left: 0;

      .p--large {
        @include font-size($p, $unit * 4);

        &:not(:last-child) {
          margin-bottom: em($unit * 2, $p);
        }

        & + .p--small:last-child {
          margin-top: 0;
        }
      }
    }

    &:last-child {
      margin-bottom: 0;
    }
  }

  mark,
  .mark {
    color: inherit;
    background: $yellow;
    text-shadow: none;
  }

  del,
  strike {
    color: $grey;
    text-decoration: none; // line-through;
    background-image: linear-gradient(to left, rgba($red, 1) 0%, rgba($red, 1) 100%);
    background-position: 0 60%;
    background-repeat: repeat-x;
    background-size: 100% 2px;
  }

  q {
    font-style: italic;
    // quotes: "\201C" "\201D" "\2018" "\2019";
    &:before { content: "\201C"; }
    &:after { content: "\201D"; }
  }

  abbr,
  .abbr,
  acronym {
    &[title] {
      border: none;
      background-image: linear-gradient(to left, rgba($black, 0) 50%, rgba($black, 0.5) 50%);
      background-position: 0 bottom;
      background-repeat: repeat-x;
      background-size: 2px 1px;
    }
  }

  pre,
  kbd,
  code {
    @include font-size(14, $unit * 3);
    font-family: $fonts--monospace;
    background: $black;
    color: $white;
  }

  code {
    color: $black;
    background: $green;
  }

  pre {
    clear: both;
    overflow: auto;
    margin: em($unit * 6, 14) 0;
    padding: em($baseline, 14) em($gutter, 14);
    box-shadow: inset 0 1px 7px darken($black, 10);

    direction: ltr;
    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    -webkit-hyphens: none;
    -moz-hyphens: none;
    -ms-hyphens: none;
    hyphens: none;

    code {
      display: block;
      color: $white;
      font-size: inherit;
      line-height: inherit;
      background: none;
      padding: 0;
    }

    &::-webkit-scrollbar {
      width: 14px;
      height: 14px;
    }

    &::-webkit-scrollbar-track {
      background: $black;
    }

    &::-webkit-scrollbar-thumb {
      background: $grey;
      border: 4px solid $black;
      border-radius: 10px;
    }
  }

  kbd,
  code {
    display: inline-block;
    line-height: 1.5;
    padding: 0 em(3, 14);

    p & {
      font-size: em(14, $p);
    }
  }


  @include respond-min($breakpoint--mobile)
  {
    .prose {

      p:not([class]) {
        max-width: em(720, $p);
      }

      .p--small {
        max-width: em(720, $p--small);
      }
    }
  }

  .boxed {
    background: $yellow;
    color: $pink;
    padding: em($unit * 4) em($unit * 4);
    margin: em($unit * 5) 0;
    border-radius: 5px;
    box-shadow: 0 0 0 2px $beige,
                0 0 0 4px $yellow,
                2px 2px 0 4px $pink;

    .prose & {
      max-width: em(710);
      margin-left: 4px;
      margin-right: 6px;
    }

    &.reversed {
      margin-left: 0;
      margin-right: 0;
      border-radius: 7px;
      box-shadow: inset 0 0 0 2px $pink,
                  inset 0 0 0 4px $yellow;
    }
  }

  .spec {

    padding: em($unit * 3) em($unit * 4) em($unit * 2) em($unit * 4);
    list-style-type: circle;
    list-style-position: inside;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: flex-start;


    li {
      flex-basis: 50%;
    }
  }

  @include respond-min($breakpoint--mobile)
  {

    .spec {

      li {
        flex-basis: 25%;
      }
    }
  }

  .reversed {
    color: $white;
    background: $pink;

    a:not([class]) {
      color: inherit;
      text-shadow: none;
      background-image: linear-gradient(to right, rgba($yellow, 0.5) 0%, rgba($yellow, 0.5) 100%);

      &:focus, &:hover {
        background-image: linear-gradient(to right, rgba($dark-red, 0.5) 0%, rgba($dark-red, 0.5) 100%);
      }
    }

    h1, h2, h3,
    .h1, .h2, .h3 {
      color: $yellow;
      text-shadow: -1px 0 0 rgba($pink, 1),
                   2px 2px 0 rgba($pink, 1),
                   3px 3px 0 rgba($yellow, 0.5);
    }

    blockquote {
      border-color: $yellow;

      p {
        color: inherit;
      }
    }

    .button {
      color: $pink;
      text-shadow: none;
      background-color: $white;
      border: 0;
      box-shadow: 0 0 0 2px $pink,
                  2px 2px 0 2px $yellow;

      &:focus, &:hover {
        color: $pink;
        box-shadow: 0 0 0 2px $pink,
                    0 0 0 4px $yellow;
      }
    }
  }

} // critical
